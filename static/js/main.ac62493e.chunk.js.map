{"version":3,"sources":["assets/logo.svg","assets/traveler.svg","assets/matryoshka.svg","assets/checkmark.svg","assets/send.svg","assets/bell.svg","assets/bell-full.svg","assets/balalaika.svg","assets/note.svg","assets/note-1.svg","assets/note-2.svg","assets/note-3.svg","assets/more.svg","redux/actions/index.js","containers/ProcessButton/ProcessButton.js","pages/WelcomePage/WelcomePage.js","_utils/localStorage.js","containers/LoginBlock/LoginBlock.js","pages/LoginPage/LoginPage.js","containers/NavPanel/NavPanel.js","containers/SearchForm/SearchForm.js","containers/UserProfile/UserProfile.js","pages/MainPage/MainPage.js","containers/SignUpBlock/SignUpBlock.js","pages/SignUpPage/SignUpPage.js","components/Instructions/Instructions.js","pages/Page404/Page404.js","apiCalls/index.js","containers/ParkCardPreview/ParkCardPreview.js","components/LoadingImage/LoadingImage.js","containers/ParksContainer/ParksContainer.js","components/Map/Pin.js","components/Map/ParkInfo.js","components/Map/Map.js","components/Widget/Widget.js","components/ParkDescription/ParkDescription.js","containers/SingleParkInfo/SingleParkInfo.js","components/Dashboard/Dashboard.js","routers/index.js","containers/App/App.js","serviceWorker.js","redux/reducers/index.js","redux/reducers/singleReducers/process/index.js","redux/reducers/singleReducers/user/index.js","redux/reducers/singleReducers/parks/index.js","redux/reducers/singleReducers/activeTab/index.js","redux/reducers/singleReducers/selectedPark/index.js","redux/reducers/singleReducers/plannedParks/index.js","index.js"],"names":["module","exports","addProcessName","name","type","addProcessStep","step","increaseStep","addProcessQuery","query","removeProcess","addUserInfo","info","addParks","parks","changeActiveTab","id","selectPark","park","addPlannedParks","addPlannedPark","removePlannedPark","ProcessButton","props","redirect","event","target","setState","isRedirected","state","this","text","to","onClick","Component","connect","dispatch","bindActionCreators","WelcomePage","className","src","logo","alt","traveler","getItem","item","element","localStorage","JSON","parse","addItem","setItem","stringify","addItemToAll","path","targetPath","LoginBlock","handleChanges","newState","error","value","preventDefault","submitUser","users","findUser","currentUser","find","user","username","checkUserPassword","password","pushUser","window","location","onSubmit","htmlFor","onChange","LoginPage","NavPanel","toggleTab","createTabs","map","tab","index","tabClass","activeTab","link","replace","key","SearchForm","toggleSubmit","process","removeSearch","submitSearch","toLowerCase","buttonClass","placeholder","style","backgroundImage","image","last_name","city","MainPage","Part","SignUpBlock","checkType","createInputs","inputs","input","split","join","data","obj","updateUser","cancel","checkUserFullness","Object","keys","length","prevProps","imageStyle","height","position","zIndex","reverseStyle","bodyWithInputs","arrow","bodyWithError","bodyWithSubmit","checkBody","matryoshka","check","SignUpPage","blocks","ind","Instructions","intervalID","allTexts","count","setInterval","clearInterval","Page404","getData","search","a","async","searching","url","fetch","response","ok","Error","json","result","ParkCardPreview","toggleWishLish","plannedParks","includes","removeFromWishList","addToWishList","newPlans","filter","fullName","states","title","pathForLink","bellType","bellFull","bell","LoadingImage","note","noteOne","noteTwo","noteThree","balalaika","ParksContainer","fetchParks","isLoaded","message","createCards","searchParks","chooseParksType","parksForCard","images","Pins","longitude","latitude","viewBox","cursor","fill","stroke","transform","d","PureComponent","ParkInfo","fullscreenControlStyle","top","left","padding","navStyle","Map","getDirection","direction","latLong","_updateViewport","viewport","_onClickMarker","popupInfo","zoom","bearing","pitch","anchor","closeOnClick","onClose","width","mapStyle","onViewportChange","mapboxApiAccessToken","_renderPopup","Widget","ParkDescription","description","href","SingleParkInfo","findPark","fetchPark","selectedPark","directionsInfo","weatherInfo","Dashboard","routers","exact","render","match","params","component","App","addUser","addUserData","planning","checkActiveTab","pathname","Boolean","hostname","rootReducer","combineReducers","action","clear","store","createStore","composeWithDevTools","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac62493e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fdb06dd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/traveler.6aba03ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/matryoshka.3edaf60d.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkmark.65820460.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.254114a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/bell.aaeb24f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/bell-full.9a386b3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/balalaika.b47c8f0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/note.295dd2ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/note-1.0190f07c.svg\";","module.exports = __webpack_public_path__ + \"static/media/note-2.45efd08d.svg\";","module.exports = __webpack_public_path__ + \"static/media/note-3.d7542fbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/more.cc3dcfa1.svg\";","export const addProcessName = name => ({\n  type: 'ADD_PROCESS_NAME',\n  name\n})\n\nexport const addProcessStep = step => ({\n  type: 'ADD_PROCESS_STEP',\n  step\n})\n\nexport const increaseStep = () => ({\n  type: 'INCREASE_STEP'\n})\n\nexport const addProcessQuery = query => ({\n  type: 'ADD_PROCESS_QUERY',\n  query\n})\n\nexport const removeProcess = () => ({\n  type: 'REMOVE_PROCESS'\n})\n\nexport const addUserInfo = info => ({\n  type: 'ADD_USER_INFO',\n  info\n})\n\nexport const addParks = parks => ({\n  type: 'ADD_PARKS',\n  parks\n})\n\nexport const changeActiveTab = id => ({\n  type: 'CHANGE_ACTIVE_TAB',\n  id\n})\n\nexport const selectPark = park => ({\n  type: 'SELECT_PARK',\n  park\n})\n\nexport const addPlannedParks = parks => ({\n  type: 'ADD_PLANNED_PARKS',\n  parks\n})\n\nexport const addPlannedPark = park => ({\n  type: 'ADD_PLANNED_PARK',\n  park\n})\n\nexport const removePlannedPark = park => ({\n  type: 'REMOVE_PLANNED_PARK',\n  park\n})\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { addProcessName, addProcessStep } from 'redux/actions'\n\nexport class ProcessButton extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isRedirected: false\n    }\n  }\n\n  redirect = (event) => {\n    const { addProcessName, addProcessStep } = this.props\n    const type = event.target.id\n    addProcessName(type)\n    addProcessStep(1)\n    this.setState({isRedirected: true})\n  }\n\n  render() {\n    const { text, type } = this.props\n\n    return (\n      (!this.state.isRedirected)\n        ? <button onClick={this.redirect} id={type}>{text}</button>\n        : <Redirect to={`/${type}`} />\n    )\n  }\n}\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    addProcessName,\n    addProcessStep\n  }, dispatch)\n)\n\nProcessButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  addProcessName: PropTypes.func.isRequired,\n  addProcessStep: PropTypes.func.isRequired\n}\n\n\nexport default connect(null, mapDispatchToProps)(ProcessButton)\n","import './WelcomePage.scss'\nimport React from 'react'\nimport logo from 'assets/logo.svg'\nimport traveler from 'assets/traveler.svg'\nimport ProcessButton from 'containers/ProcessButton/ProcessButton'\n\nconst WelcomePage = () => {\n  return (\n    <main className=\"welcome\">\n      <img className=\"logo\" src={logo} alt=\"logo\"/>\n      <section>\n        <h1>Welcome, Traveler!</h1>\n        <img src={traveler} alt=\"traveler\"/>\n        <div>\n          <ProcessButton text=\"Sign In\" type='login' />\n          <ProcessButton text=\"Create Account\" type='signup' />\n        </div>\n      </section>\n    </main>\n  )\n}\n\nexport default WelcomePage\n","export const getItem = item => {\n  const element = localStorage.getItem(item);\n  return JSON.parse(element)\n}\n\nexport const addItem = (type, item) => {\n  return localStorage.setItem(type, JSON.stringify(item))\n}\n\nexport const addItemToAll = (path, item) => {\n  const targetPath = (!getItem(path)) ? [ ] : [...getItem(path)]\n  return localStorage.setItem(path, JSON.stringify([...targetPath, item]))\n}\n","import './LoginBlock.scss'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport { getItem, addItem } from '_utils/localStorage'\nimport { addUserInfo } from 'redux/actions'\n\nexport class LoginBlock extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isRedirected: false,\n      username: '',\n      password: ''\n    }\n  }\n\n  handleChanges = (event) => {\n    const newState = { error: null }\n    newState[event.target.id] = event.target.value\n    this.setState(newState)\n  }\n\n  redirect = (event) => {\n    event.preventDefault()\n    this.setState({isRedirected: true})\n  }\n\n  submitUser = (event) => {\n    event.preventDefault()\n    const users = getItem('users')\n    return users\n      ? this.findUser(users)\n      : this.setState({error: 'Please, create account!'})\n  }\n\n  findUser = (users) => {\n    const currentUser = users.find(user => user.username === this.state.username)\n    return currentUser\n      ? this.checkUserPassword(currentUser)\n      : this.setState({error: 'This username is not found!'})\n  }\n\n  checkUserPassword = (currentUser) => {\n    return (currentUser.password === this.state.password)\n      ? this.pushUser(currentUser)\n      : this.setState({error: 'Password is incorrect!'})\n  }\n\n  pushUser = (user) => {\n    this.props.addUserInfo(user)\n    addItem('user', user)\n    window.location = '/'\n  }\n\n  render() {\n    const { username, password, error, isRedirected} = this.state\n    return (\n      <section className=\"login-container\">\n        { isRedirected && <Redirect to='/signup' /> }\n        <form onSubmit={this.submitUser}>\n          <h2>Traveler login</h2>\n          {error && <p className='error'>{error}</p>}\n          <label htmlFor=\"username\">username</label>\n          <input\n            type=\"username\"\n            id=\"username\"\n            value={username}\n            onChange={this.handleChanges}/>\n          <label htmlFor=\"password\">password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={this.handleChanges}/>\n          <div>\n            <button onClick={this.submitUser}>Submit</button>\n            <button onClick={this.redirect}>Sign Up</button>\n          </div>\n        </form>\n      </section>\n    )\n  }\n}\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    addUserInfo\n  }, dispatch)\n)\n\nLoginBlock.propTypes = {\n  addUserInfo: PropTypes.func.isRequired\n}\n\nexport default connect(null, mapDispatchToProps)(LoginBlock)\n","import './LoginPage.scss'\nimport React from 'react'\nimport logo from 'assets/logo.svg'\nimport LoginBlock from 'containers/LoginBlock/LoginBlock'\n\nconst LoginPage = () => {\n  return (\n    <main className=\"login-page\">\n      <img className=\"logo\" src={logo} alt=\"logo\"/>\n      <LoginBlock />\n    </main>\n  )\n}\n\nexport default LoginPage\n","import './NavPanel.scss'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { NavLink } from 'react-router-dom'\nimport { changeActiveTab, removeProcess } from 'redux/actions'\n\nexport class NavPanel extends Component {\n  toggleTab = (event) => {\n    const { changeActiveTab, removeProcess } = this.props\n    removeProcess()\n    changeActiveTab(+event.target.id)\n  }\n\n  createTabs = () => {\n    const tabNames = ['dashboard', 'parks', 'wish list', 'visited']\n\n    return tabNames.map((tab, index) => {\n      const tabClass = (this.props.activeTab === (index + 1)) ? 'nav-tab tab-active' : 'nav-tab'\n      const link = tab.replace(/ /g, '-')\n      return <NavLink\n        to={`/${link}`}\n        key={link}\n        id={index+1}\n        className={tabClass}\n        onClick={this.toggleTab}>{ tab }</NavLink>\n    })\n  }\n\n  render() {\n    return (\n      <nav className=\"nav-panel\">\n        { this.createTabs() }\n      </nav>\n    )\n  }\n}\n\nexport const mapStateToProps = ({ activeTab }) => ({\n  activeTab\n})\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    changeActiveTab, removeProcess\n  }, dispatch)\n)\n\nNavPanel.propTypes = {\n  activeTab: PropTypes.number.isRequired,\n  changeActiveTab: PropTypes.func.isRequired,\n  removeProcess: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavPanel)\n","import './SearchForm.scss'\nimport React, { Component } from 'react'\n// import PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { addProcessName, addProcessQuery, removeProcess } from 'redux/actions'\n\nexport class SearchForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      query: ''\n    }\n  }\n\n  toggleSubmit = (event) => {\n    event.preventDefault()\n    const { process } = this.props\n    const { query } = this.state\n    return (!process && query !== '')\n      ? this.submitSearch(event)\n      : this.removeSearch()\n  }\n\n  submitSearch = (event) => {\n    event.preventDefault()\n    const { addProcessName, addProcessQuery } = this.props\n    addProcessName('search')\n    addProcessQuery(this.state.query)\n    this.setState({query: ''})\n  }\n\n  removeSearch = () => {\n    const { removeProcess } = this.props\n    this.setState({query: ''})\n    removeProcess()\n  }\n\n  handleChanges = (event) => {\n    const query = event.target.value.toLowerCase()\n    this.setState({query: query})\n  }\n\n  render() {\n    const { query } = this.state\n    const { process } = this.props\n    const buttonClass = (!process) ? 'submit-btn' : 'cancel-btn'\n    return (\n      <form className=\"search-form\" onSubmit={this.toggleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={this.handleChanges}\n          placeholder=\"Search\"/>\n        <button className={buttonClass}></button>\n      </form>\n    )\n  }\n}\n\nexport const mapStateToProps = ({process}) => ({\n  process\n})\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    addProcessName, addProcessQuery, removeProcess\n  }, dispatch)\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm)\n","import './UserProfile.scss'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n// import logout from 'assets/logout.svg'\n\nexport const UserProfile = ({ user }) => {\n  return (\n    <aside className=\"user-profile\">\n      <header>\n        <h2>Your Account</h2>\n        {\n          //<img src={logout} alt=\"logout\"/>\n        }\n      </header>\n      <section>\n        <div className=\"image\" style={{backgroundImage: `url(${user.image})`}}></div>\n        <div>\n          <p>{user.name + ' ' + user.last_name}</p>\n          <p className=\"location\">{user.city}</p>\n        </div>\n      </section>\n    </aside>\n  )\n}\n\nexport const mapStateToProps = ({ user }) => ({\n  user\n})\n\nUserProfile.propTypes = {\n  user: PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps)(UserProfile)\n","import './MainPage.scss'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport NavPanel from 'containers/NavPanel/NavPanel'\nimport SearchForm from 'containers/SearchForm/SearchForm'\nimport UserProfile from 'containers/UserProfile/UserProfile'\n\nconst MainPage = ({ Part, type }) => {\n  return (\n    <main className=\"main-page\">\n      <header>\n        <NavPanel />\n        <SearchForm />\n      </header>\n      <UserProfile />\n      <Part type={type} />\n    </main>\n  )\n}\n\nMainPage.propTypes = {\n  Part: PropTypes.elementType.isRequired,\n  type: PropTypes.string\n}\n\nexport default MainPage\n","import './SignUpBlock.scss'\nimport React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport matryoshka from 'assets/matryoshka.svg'\nimport check from 'assets/checkmark.svg'\nimport arrow from 'assets/send.svg'\nimport { addItem, addItemToAll } from '_utils/localStorage'\nimport { addUserInfo, increaseStep } from 'redux/actions'\n\nexport class SignUpBlock extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      type: '',\n      data: {},\n      error: ''\n    }\n  }\n\n  componentDidMount() {\n    const { process } = this.props\n    return (!process)\n      ? window.location = '/welcome'\n      : this.checkType()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.process.step !== prevProps.process.step) {\n      this.checkType()\n    }\n  }\n\n  checkType = () => {\n    const { id, process } = this.props\n    if (process.step < id) this.setState({type: 'inactive'})\n    if (process.step === id) this.setState({type: 'active'})\n    if (process.step > id) this.setState({type: 'done'})\n  }\n\n  createInputs = () => {\n    const { inputs } = this.props\n\n    return inputs.map(input => {\n      const text = (input === 'password') ? 'password' : 'text'\n      return (\n        <Fragment key=\"inputs\">\n          <label\n            key={'label-' + input}\n            htmlFor={input}>\n            {input.split('_').join(' ')}</label>\n          <input\n            key={'input-' + input}\n            id={input}\n            type={text}\n            value={this.state.data[input]}\n            onChange={this.handleChanges} />\n        </Fragment>\n      )\n    })\n  }\n\n  handleChanges = (event) => {\n    const obj = {}\n    obj[event.target.id] = event.target.value\n    this.setState({data: {...this.state.data, ...obj}})\n  }\n\n  updateUser = () => {\n    this.props.increaseStep()\n    this.props.addUserInfo(this.state.data)\n  }\n\n  submitUser = () => {\n    const {user} = this.props\n    addItem('user', user)\n    addItemToAll('users', user)\n    window.location = '/'\n  }\n\n  cancel = () => {\n    window.location = '/welcome'\n  }\n\n  checkUserFullness = () => {\n    const user = this.props.user ? this.props.user : {}\n    return Object.keys(user).length === 6\n  }\n\n  render() {\n    const { id, user, process } = this.props\n\n    const imageStyle = {\n      height: `${200 - (id * 40)}px`,\n      position: 'relative',\n      zIndex: '3'\n    }\n\n    const reverseStyle = {\n      height: `${20 + (id * 40)}px`,\n      position: 'relative',\n      zIndex: '3'\n    }\n\n    const bodyWithInputs = (\n      <Fragment key='form'>\n        <form>\n          <h2>CREATE ACCOUNT</h2>\n          { this.createInputs() }\n          <p>click arrow button to go to next step</p>\n        </form>\n        <img className=\"arrow-btn\" src={arrow} alt=\"arrow\" onClick={this.updateUser}/>\n      </Fragment>\n    )\n\n    const bodyWithError = (\n      <div key='error-block' className=\"submit-block error-block\">\n        <h2>Profile overview</h2>\n        <p className=\"error\">You don't pass correct data</p>\n        <button onClick={this.cancel}>Cancel</button>\n      </div>\n    )\n\n    const bodyWithSubmit = (!this.checkUserFullness()) ? bodyWithError : (\n      <div key='submit-block' className=\"submit-block\">\n        <h2>Profile overview</h2>\n        <div className='image' style={{backgroundImage: `url(${user.image})`}}></div>\n        <p>{user.name + ' ' + user.last_name}</p>\n        <p className=\"location\">{user.city}</p>\n        <div>\n          <button onClick={this.submitUser}>Create</button>\n          <button onClick={this.cancel}>Cancel</button>\n        </div>\n      </div>\n    )\n\n    const checkBody = (process && process.step === 4) ? bodyWithSubmit : bodyWithInputs\n\n    return (\n      <section id={ id } className={`signup-container ${this.state.type}-block`}>\n        { this.state.type === 'inactive' && <img style={imageStyle} src={matryoshka} alt=\"matryoshka\"/>}\n        { this.state.type === 'active' && checkBody }\n        { this.state.type === 'done' && <img style={reverseStyle} src={check} alt=\"check\"/> }\n      </section>\n    )\n  }\n}\n\nexport const mapStateToProps = ({ process, user }) => ({\n  process, user\n})\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    addUserInfo,\n    increaseStep\n  }, dispatch)\n)\n\nSignUpBlock.propTypes = {\n  user: PropTypes.object.isRequired,\n  process: PropTypes.object.isRequired,\n  addUserInfo: PropTypes.func.isRequired,\n  increaseStep: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpBlock)\n","import './SignUpPage.scss'\nimport React from 'react'\nimport SignUpBlock from 'containers/SignUpBlock/SignUpBlock'\n\nconst SignUpPage = () => {\n  const blockInfo = [['username', 'password'], ['name', 'last_name', 'city'], ['image'], []]\n  const blocks = blockInfo.map((info, ind) => {\n    return <SignUpBlock key={ind+1} id={ind+1} inputs={info} />\n  })\n\n  return (\n    <main className=\"signup-page\">\n      { blocks }\n    </main>\n  )\n}\n\nexport default SignUpPage\n","import './Instructions.scss'\nimport React, { Component } from 'react'\n\nclass Instructions extends Component {\n  constructor() {\n    super()\n    this.state = {\n      text: 'Click on \\'Dashboard\\' tab to see your summary',\n      allTexts: [\n        'Click on \\'Dashboard\\' tab to see your summary',\n        'Click on \\'Parks\\' tab to see all national parks',\n        'Click on \\'Wish List\\' tab to see your plannings',\n        'Click on \\'Visited\\' tab to see your visited places'\n      ],\n      count: 1\n    }\n  }\n\n  intervalID = 0\n\n  componentDidMount() {\n    const { allTexts, count } = this.state\n\n    this.intervalID = setInterval(() => {\n      return (count !== 4)\n        ? this.setState({text: allTexts[count], count: count+1})\n        : this.setState({text: allTexts[0], count: 1})\n    }, 6000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID)\n  }\n\n  render() {\n    return (\n      <section className=\"instructions\">\n        <h2>{this.state.text}</h2>\n      </section>\n    )\n  }\n}\n\nexport default Instructions\n","import './Page404.scss'\nimport React from 'react'\n\nconst Page404 = () => {\n  return (\n    <main className=\"page404\">\n      <h1>Please, enter correct url!</h1>\n    </main>\n  )\n}\n\nexport default Page404\n","export const getData = async (type, search) => {\n  const searching = (search) ? `?q=${search}`: ''\n  const apiKey = 'jifXT2Vf98f3NV0eJEEVe6nMf04XQVPYzznfolCL'\n  const url = `https://developer.nps.gov/api/v1/${type}${searching}&fields=images&limit=60&api_key=${apiKey}`\n\n  const response = await fetch(url)\n  if (!response.ok) {\n    throw new Error('There was an error getting parks.')\n  }\n\n  const result = await response.json()\n  return result.data\n}\n","import './ParkCardPreview.scss'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { NavLink } from 'react-router-dom'\nimport { addPlannedPark, removePlannedPark, removeProcess } from 'redux/actions'\nimport { addItem, addItemToAll } from '_utils/localStorage'\n// import done from 'assets/done.svg'\nimport bell from 'assets/bell.svg'\nimport bellFull from 'assets/bell-full.svg'\n\nexport class ParkCardPreview extends Component {\n  toggleWishLish = () => {\n    const { plannedParks, name } = this.props\n    return (!plannedParks.includes(name))\n      ? this.addToWishList(name)\n      : this.removeFromWishList(name, plannedParks)\n  }\n\n  addToWishList = (name) => {\n    this.props.addPlannedPark(name)\n    addItemToAll('planning', name)\n  }\n\n  removeFromWishList = (name, plannedParks) => {\n    this.props.removePlannedPark(name)\n    const newPlans = plannedParks.filter(park => park !== name)\n    addItem('planning', newPlans)\n  }\n\n  redirect = () => {\n    this.props.removeProcess()\n  }\n\n  render() {\n    const { id, image, fullName, name, states, plannedParks } = this.props\n    const title = (fullName.length > 35 ) ? name : fullName\n    const link = fullName.toLowerCase().replace(/ /g, '-')\n    const pathForLink = `${this.props.type}/${link}`\n    const bellType = (plannedParks.includes(name)) ? bellFull : bell\n    return (\n      <section id={id} className=\"park-card\">\n        <div className=\"preview\" style={{backgroundImage: `url(${image})`}}>\n          <header>\n            <p className=\"location\">{states}</p>\n            <section>\n              {\n                // <img src={done} alt=\"flag\"/>\n              }\n              <img src={bellType} alt=\"bell\" onClick={this.toggleWishLish}/>\n            </section>\n          </header>\n        </div>\n        <NavLink\n          to={pathForLink}\n          onClick={this.redirect}\n          className=\"title\">{ title }</NavLink>\n      </section>\n    )\n  }\n}\n\nParkCardPreview.propTypes = {\n  id: PropTypes.string.isRequired,\n  fullName: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  states: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  plannedParks: PropTypes.arrayOf(PropTypes.string).isRequired,\n  addPlannedPark: PropTypes.func.isRequired,\n  removePlannedPark: PropTypes.func.isRequired,\n  removeProcess: PropTypes.func.isRequired\n}\n\nexport const mapStateToProps = ({plannedParks}) => ({\n  plannedParks\n})\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    addPlannedPark,\n    removePlannedPark,\n    removeProcess\n  }, dispatch)\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParkCardPreview)\n","import './LoadingImage.scss'\nimport React from 'react'\nimport balalaika from 'assets/balalaika.svg'\nimport note from 'assets/note.svg'\nimport noteOne from 'assets/note-1.svg'\nimport noteTwo from 'assets/note-2.svg'\nimport noteThree from 'assets/note-3.svg'\n\nconst LoadingImage = () => {\n  return (\n    <section className=\"loading-image\">\n      <div>\n        <img src={note} alt=\"note\"/>\n        <img src={noteOne} alt=\"note\"/>\n        <img src={noteTwo} alt=\"note\"/>\n        <img src={noteThree} alt=\"note\"/>\n      </div>\n      <img src={balalaika} alt=\"balalaika\"/>\n      <p>loading...</p>\n    </section>\n  )\n}\n\nexport default LoadingImage\n","import './ParksContainer.scss'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getData } from 'apiCalls'\nimport { addParks } from 'redux/actions'\nimport ParkCardPreview from 'containers/ParkCardPreview/ParkCardPreview'\nimport LoadingImage from '../../components/LoadingImage/LoadingImage'\n\nexport class ParksContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      error: null\n    }\n  }\n\n  componentDidMount() {\n    return (!this.props.parks.length)\n      ? this.fetchParks()\n      : this.setState({isLoaded: true})\n  }\n\n  fetchParks = async () => {\n    try {\n      const parks = await getData('parks', 'park')\n      this.setState({isLoaded: true})\n      this.props.addParks(parks)\n    }\n    catch (error) {\n      this.setState({\n        isLoaded: false,\n        error: error.message\n      })\n    }\n  }\n\n  createCards = () => {\n    const { process, parks } = this.props\n    const { parksForCard, type } = (process && process.name === 'search')\n      ? this.searchParks(parks, process.query)\n      : this.chooseParksType()\n\n    return parksForCard.map(park => (\n      <ParkCardPreview\n        key={park.id}\n        id={park.id}\n        image={park.images[0].url}\n        fullName={park.fullName}\n        name= {park.name}\n        states={park.states}\n        type={type}/>\n    ))\n  }\n\n  searchParks = (parks, query) => {\n    const parksForCard = parks.filter(park => park.name.toLowerCase().includes(query))\n    return { parksForCard, type: 'parks'}\n  }\n\n  chooseParksType = () => {\n    const { parks, type, plannedParks } = this.props\n    switch (type) {\n      case 'all':\n        return { parksForCard: parks, type: 'parks'}\n      case 'wish':\n        const parksForCard = parks.filter(park => plannedParks.includes(park.name))\n        return { parksForCard, type: 'wish-list'}\n      default:\n        return { parksForCard: [ ], type: ''}\n    }\n  }\n\n  render() {\n    const { isLoaded, error } = this.state\n    return (\n      <section className=\"parks-content\">\n        { !isLoaded && !error && <LoadingImage /> }\n        { error && <p>{error}</p> }\n        { isLoaded && this.createCards() }\n      </section>\n    )\n  }\n}\n\nexport const mapStateToProps = ({parks, plannedParks, process}) => ({\n  parks, plannedParks, process\n})\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({ addParks }, dispatch)\n)\n\nParksContainer.propTypes = {\n  type: PropTypes.string.isRequired,\n  parks: PropTypes.arrayOf(PropTypes.object).isRequired,\n  plannedParks: PropTypes.arrayOf(PropTypes.string).isRequired,\n  process: PropTypes.object,\n  addParks: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParksContainer)\n","import React, { PureComponent } from 'react'\nimport { Marker } from 'react-map-gl'\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`\n\nconst SIZE = 20\n\n// Important for perf: the markers never change, avoid rerender when the map viewport changes\nexport default class Pins extends PureComponent {\n  render() {\n    const { park, onClick } = this.props\n    const { longitude, latitude } = park\n\n    return (\n      <Marker longitude={longitude} latitude={latitude}>\n        <svg\n          height={SIZE}\n          viewBox=\"0 0 24 24\"\n          style={{\n            cursor: 'pointer',\n            fill: '#d00',\n            stroke: 'none',\n            transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n          }}\n          onClick={() => onClick(park)}\n        >\n          <path d={ICON} />\n        </svg>\n      </Marker>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\n\nexport default class ParkInfo extends PureComponent {\n  render() {\n    const { name } = this.props\n\n    return (\n      <div>\n        <p className=\"place\">{ name }</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport MapGL, { Popup, NavigationControl, FullscreenControl } from 'react-map-gl'\nimport Pin from './Pin'\nimport ParkInfo from './ParkInfo'\n\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoicmF5cmVkZ29vc2UiLCJhIjoiY2s1aWV6YWp3MDBhZjNrbmoza21zM2xnYSJ9.pobIjWmc_InU_zmap2lguQ'\n\nconst fullscreenControlStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n}\n\nconst navStyle = {\n  position: 'absolute',\n  top: 36,\n  left: 0,\n  padding: '10px'\n}\n\nclass Map extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viewport: {\n        latitude: 0,\n        longitude: 0,\n        zoom: 14,\n        bearing: 0,\n        pitch: 0\n      },\n      popupInfo: null\n    }\n  }\n\n  componentDidMount() {\n    const park = this.getDirection()\n    this.setState({viewport: {\n      ...this.state.viewport, latitude: park.latitude, longitude: park.longitude}\n    })\n  }\n\n  getDirection = () => {\n    const direction = this.props.latLong.replace('lat:', '').replace('long:', '').split(',')\n\n    return {\n      name: this.props.name,\n      latitude: +direction[0],\n      longitude: +direction[1]\n    }\n  }\n\n  _updateViewport = viewport => {\n    this.setState({viewport})\n  }\n\n  _onClickMarker = park => {\n    this.setState({popupInfo: park})\n  }\n\n  _renderPopup() {\n    const { popupInfo } = this.state\n\n    return (\n      popupInfo && (\n        <Popup\n          anchor=\"top\"\n          longitude={popupInfo.longitude}\n          latitude={popupInfo.latitude}\n          closeOnClick={false}\n          onClose={() => this.setState({popupInfo: null})}\n        >\n          <ParkInfo name={popupInfo.name} />\n        </Popup>\n      )\n    )\n  }\n\n  render() {\n    const { viewport } = this.state\n    const park = this.getDirection()\n\n    return (\n      <MapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"25vh\"\n        mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\n        onViewportChange={this._updateViewport}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n      >\n        <Pin park={park} onClick={this._onClickMarker} />\n\n        {this._renderPopup()}\n\n        <div style={fullscreenControlStyle}>\n          <FullscreenControl />\n        </div>\n        <div style={navStyle}>\n          <NavigationControl />\n        </div>\n      </MapGL>\n    )\n  }\n}\n\nexport default Map\n","import './Widget.scss'\nimport React from 'react'\nimport Map from '../Map/Map'\n\nconst Widget = ({title, text, data}) => {\n  return (\n    <section className={`widgets ${title}`}>\n      <h3>{ title } info</h3>\n      {\n        (text)\n          ? <p>{ text }</p>\n          : <p>There is no { title } info.</p>\n      }\n      { title === 'directions' && <Map {...data}/> }\n    </section>\n  )\n}\n\nexport default Widget\n","import './ParkDescription.scss'\nimport React from 'react'\nimport arrow from 'assets/more.svg'\n\nconst ParkDescription = (props) => {\n  const { image, fullName, url, states, description } = props\n\n  return (\n    <section className=\"park-info\">\n      <div style={{backgroundImage: `url(${image})`}}></div>\n      <header>\n        <h2>{fullName}</h2>\n        <a href={url}><img src={arrow} alt=\"arrow\"/></a>\n      </header>\n      <p className=\"location\">{states}</p>\n      <p className=\"desc\">{description}</p>\n    </section>\n  )\n}\n\nexport default ParkDescription\n","import './SingleParkInfo.scss'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { selectPark } from 'redux/actions'\nimport { getData } from 'apiCalls'\nimport Widget from 'components/Widget/Widget'\nimport ParkDescription from 'components/ParkDescription/ParkDescription'\n\nexport class SingleParkInfo extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isLoaded: false\n    }\n  }\n\n  componentDidMount() {\n    const { type, parks } = this.props\n    return (parks.length)\n      ? this.findPark(type)\n      : this.fetchPark(type)\n  }\n\n  findPark = (type) => {\n    const { parks, selectPark } = this.props\n    const search = type.replace(/-/g, ' ')\n    const park = parks.find(park => park.fullName.toLowerCase() === search)\n    selectPark(park)\n    this.setState({isLoaded: true})\n  }\n\n  fetchPark = async (type) => {\n    const search = type.replace(/-/g, '%20')\n    try {\n      const park = await getData('parks', search)\n      this.props.selectPark(park[0])\n      this.setState({isLoaded: true})\n    }\n    catch(error) {\n      this.setState({error: error.message, isLoaded: false})\n    }\n  }\n\n  render() {\n    const { selectedPark } = this.props\n    const {\n      fullName,\n      name,\n      description,\n      url,\n      states,\n      images,\n      directionsInfo,\n      weatherInfo,\n      latLong\n    } = selectedPark\n    return (\n      this.state.isLoaded &&\n      <section className=\"single-park\">\n        <ParkDescription\n          {...{fullName, url, states, description}}\n          image={images[0].url} />\n        <Widget title=\"planning\" />\n        <Widget title=\"directions\" text={directionsInfo} data={{ latLong, name }} />\n        <Widget title=\"weather\" text={weatherInfo}  />\n      </section>\n    )\n  }\n}\n\nexport const mapStateToProps = ({ parks, selectedPark, plannedParks }) => ({\n  parks, selectedPark, plannedParks\n})\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    selectPark\n  }, dispatch)\n)\n\nSingleParkInfo.propTypes = {\n  parks: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedPark: PropTypes.object.isRequired,\n  plannedParks: PropTypes.arrayOf(PropTypes.string).isRequired,\n  selectPark: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleParkInfo)\n","import './Dashboard.scss'\nimport React from 'react'\n\nconst Dashboard = () => {\n  return (\n    <section className=\"dashboard\">\n      <h2>Please, click on tab to see information</h2>\n    </section>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport WelcomePage from 'pages/WelcomePage/WelcomePage'\nimport LoginPage from 'pages/LoginPage/LoginPage'\nimport MainPage from 'pages/MainPage/MainPage'\nimport SignUpPage from 'pages/SignUpPage/SignUpPage'\nimport Instructions from 'components/Instructions/Instructions'\nimport Page404 from 'pages/Page404/Page404'\nimport ParksContainer from 'containers/ParksContainer/ParksContainer'\nimport SingleParkInfo from 'containers/SingleParkInfo/SingleParkInfo'\nimport Dashboard from 'components/Dashboard/Dashboard'\n\nconst routers = (\n  <Switch>\n    <Route exact path='#/welcome' render={() => <WelcomePage />} />\n    <Route exact path='#/login' render={() => <LoginPage />} />,\n    <Route exact path='#/signup' render={() => <SignUpPage />} />\n    <Route exact path='#/' render={() => <MainPage Part={ Instructions } />} />\n    <Route exact path='#/dashboard' render={() => <MainPage Part={ Dashboard } />} />\n    <Route exact path='#/parks' render={() => <MainPage Part={ ParksContainer } type=\"all\" />} />\n    <Route exact path='#/wish-list' render={() => <MainPage Part={ ParksContainer } type=\"wish\" />} />\n    <Route exact path='#/parks/:park' render={({match}) => <MainPage Part={ SingleParkInfo } type={match.params.park} />} />\n    <Route path=\"*\" component={Page404} />\n  </Switch>\n)\n\nexport default routers\n","import './App.scss'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport routers from 'routers'\nimport { addUserInfo, addPlannedParks, changeActiveTab } from 'redux/actions'\nimport { getItem } from '_utils/localStorage'\n\nexport class App extends Component {\n  componentDidMount() {\n    const user = getItem('user')\n    const path = window.location.pathname\n    if (user) this.addUser(user)\n    this.checkActiveTab(path)\n  }\n\n  addUser = (user) => {\n    this.props.addUserInfo(user)\n    this.addUserData()\n  }\n\n  addUserData = () => {\n    const planning = getItem('planning')\n    if (planning) this.props.addPlannedParks(planning)\n  }\n\n  checkActiveTab = (pathname) => {\n    const { changeActiveTab } = this.props\n    switch (pathname) {\n      case '/dashboard':\n        return changeActiveTab(1)\n      case '/parks':\n        return changeActiveTab(2)\n      case '/wish-list':\n        return changeActiveTab(3)\n      case '/visited':\n        return changeActiveTab(4)\n      default:\n        return changeActiveTab(0)\n    }\n  }\n\n  render() {\n    return (\n      <main className=\"app\">{ routers }</main>\n    )\n  }\n}\n\nexport const mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    addUserInfo, addPlannedParks, changeActiveTab\n  }, dispatch)\n)\n\nApp.propTypes = {\n  addUserInfo: PropTypes.func.isRequired,\n  addPlannedParks: PropTypes.func.isRequired,\n  changeActiveTab: PropTypes.func.isRequired,\n}\n\nexport default connect(null, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport { process } from './singleReducers/process'\nimport { user } from './singleReducers/user'\nimport { parks } from './singleReducers/parks'\nimport { activeTab } from './singleReducers/activeTab'\nimport { selectedPark } from './singleReducers/selectedPark'\nimport { plannedParks } from './singleReducers/plannedParks'\n\nconst rootReducer = combineReducers({\n  process,\n  user,\n  parks,\n  activeTab,\n  selectedPark,\n  plannedParks\n})\n\nexport default rootReducer\n","export const process = (state = null, action) => {\n  switch (action.type) {\n    case 'ADD_PROCESS_NAME':\n      return {...state, name: action.name}\n    case 'ADD_PROCESS_STEP':\n      return {...state, step: action.step}\n    case 'INCREASE_STEP':\n      return {...state, step: state.step + 1}\n    case 'ADD_PROCESS_QUERY':\n      return {...state, query: action.query}\n    case 'REMOVE_PROCESS':\n      return null\n    default:\n      return state\n  }\n}\n","export const user = (state = {}, action) => {\n  switch (action.type) {\n    case 'ADD_USER_INFO':\n      return {...state, ...action.info}\n    default:\n      return state\n  }\n}\n","export const parks = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_PARKS\":\n      return action.parks\n    default:\n      return state\n  }\n}\n","export const activeTab = (state = 0, action) => {\n  switch (action.type) {\n    case 'CHANGE_ACTIVE_TAB':\n      return action.id\n    default:\n      return state\n  }\n}\n","export const selectedPark = (state = {}, action) => {\n  switch (action.type) {\n    case 'SELECT_PARK':\n      return action.park\n    default:\n      return state\n  }\n}\n","export const plannedParks = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_PLANNED_PARKS':\n      return action.parks\n    case 'ADD_PLANNED_PARK':\n      return [...state, action.park]\n    case 'REMOVE_PLANNED_PARK':\n      return state.filter(park => park !== action.park)\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport App from 'containers/App/App'\nimport * as serviceWorker from './serviceWorker'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from 'redux/reducers'\n\nlocalStorage.clear();\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nconst app = (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}